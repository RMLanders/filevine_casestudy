{GridSearchCV(cv=10,
             estimator=XGBClassifier(base_score=None, booster=None,
                                     callbacks=None, colsample_bylevel=None,
                                     colsample_bynode=None,
                                     colsample_bytree=None,
                                     early_stopping_rounds=10,
                                     enable_categorical=True, eval_metric=None,
                                     feature_types=None, gamma=None,
                                     gpu_id=None, grow_policy=None,
                                     importance_type=None,
                                     interaction_constraints=None,
                                     learning_rate=None, ma...
                                     max_leaves=None, min_child_weight=None,
                                     missing=nan, monotone_constraints=None,
                                     n_estimators=100, n_jobs=None, nthread=4,
                                     num_parallel_tree=None, predictor=None, ...),
             n_jobs=10,
             param_grid={'booster': ['gbtree'],
                         'learning_rate': [0.1, 0.01, 0.05],
                         'max_depth': range(2, 20, 5),
                         'n_estimators': range(10, 85, 5),
                         'objective': ['binary:logistic']},
             scoring='roc_auc', verbose=10): (0.9290368756142375, 0.6301085568326948)}


             "{GridSearchCV(cv=10,\n             estimator=XGBClassifier(base_score=None, booster=None,
             callbacks=None, colsample_bylevel=None,
             colsample_bynode=None,
             colsample_bytree=None,
             early_stopping_rounds=10,
             enable_categorical=True, eval_metric=None,
             feature_types=None, gamma=None,
             gpu_id=None, grow_policy=None,
             importance_type=None,
             interaction_constraints=None,
             learning_rate=None, ma...
             max_leaves=None, min_child_weight=None,
             missing=nan, monotone_constraints=None,
             n_estimators=100, n_jobs=None, nthread=4,
             num_parallel_tree=None, predictor=None, ...),\n             n_jobs=10,\n             param_grid={'booster': ['gbtree'],\n                         'learning_rate': [0.1, 0.01, 0.05],\n                         'max_depth': range(2, 20, 5),\n                         'n_estimators': range(10, 85, 5),\n                         'objective': ['binary:logistic']},\n             scoring='roc_auc', verbose=10): (0.9290368756142375, 0.6301085568326948), GridSearchCV(cv=10,\n             estimator=XGBClassifier(base_score=None, booster=None,
             callbacks=None, colsample_bylevel=None,
             colsample_bynode=None,
             colsample_bytree=None,
             early_stopping_rounds=10,
             enable_categorical=True, eval_metric=None,
             feature_types=None, gamma=None,
             gpu_id=None, grow_policy=None,
             importance_type=None,
             interaction_constraints=None,
             learning_rate=None, ma...
             max_leaves=None, min_child_weight=None,
             missing=nan, monotone_constraints=None,
             n_estimators=100, n_jobs=None, nthread=4,
             num_parallel_tree=None, predictor=None, ...),\n             n_jobs=10,\n             param_grid={'booster': ['gbtree'],\n                         'learning_rate': [0.1, 0.01, 0.05],\n                         'max_depth': range(2, 20, 5),\n                         'n_estimators': range(10, 85, 5),\n                         'objective': ['binary:logistic']},\n             scoring='roc_auc', verbose=10): (0.9094327096399479, 0.6017241379310344), GridSearchCV(cv=10,\n             estimator=XGBClassifier(base_score=None, booster=None,
             callbacks=None, colsample_bylevel=None,
             colsample_bynode=None,
             colsample_bytree=None,
             early_stopping_rounds=10,
             enable_categorical=True, eval_metric=None,
             feature_types=None, gamma=None,
             gpu_id=None, grow_policy=None,
             importance_type=None,
             interaction_constraints=None,
             learning_rate=None, ma...
             max_leaves=None, min_child_weight=None,
             missing=nan, monotone_constraints=None,
             n_estimators=100, n_jobs=None, nthread=4,
             num_parallel_tree=None, predictor=None, ...),\n             n_jobs=10,\n             param_grid={'booster': ['gbtree'],\n                         'learning_rate': [0.1, 0.01, 0.05],\n                         'max_depth': range(2, 20, 5),\n                         'n_estimators': range(10, 85, 5),\n                         'objective': ['binary:logistic']},\n             scoring='roc_auc', verbose=10): (0.8946304763080392, 0.5379310344827586), GridSearchCV(cv=10,\n             estimator=XGBClassifier(base_score=None, booster=None,
             callbacks=None, colsample_bylevel=None,
             colsample_bynode=None,
             colsample_bytree=None,
             early_stopping_rounds=10,
             enable_categorical=True, eval_metric=None,
             feature_types=None, gamma=None,
             gpu_id=None, grow_policy=None,
             importance_type=None,
             interaction_constraints=None,
             learning_rate=None, ma...
             max_leaves=None, min_child_weight=None,
             missing=nan, monotone_constraints=None,
             n_estimators=100, n_jobs=None, nthread=4,
             num_parallel_tree=None, predictor=None, ...),\n             n_jobs=10,\n             param_grid={'booster': ['gbtree'],\n                         'learning_rate': [0.1, 0.01, 0.05],\n                         'max_depth': range(2, 20, 5),\n                         'n_estimators': range(10, 85, 5),\n                         'objective': ['binary:logistic']},\n             scoring='roc_auc', verbose=10): (0.9494382644833441, 0.6501915708812261), GridSearchCV(cv=10,\n             estimator=XGBClassifier(base_score=None, booster=None,
             callbacks=None, colsample_bylevel=None,
             colsample_bynode=None,
             colsample_bytree=None,
             early_stopping_rounds=10,
             enable_categorical=True, eval_metric=None,
             feature_types=None, gamma=None,
             gpu_id=None, grow_policy=None,
             importance_type=None,
             interaction_constraints=None,
             learning_rate=None, ma...
             max_leaves=None, min_child_weight=None,
             missing=nan, monotone_constraints=None,
             n_estimators=100, n_jobs=None, nthread=4,
             num_parallel_tree=None, predictor=None, ...),\n             n_jobs=10,\n             param_grid={'booster': ['gbtree'],\n                         'learning_rate': [0.1, 0.01, 0.05],\n                         'max_depth': range(2, 20, 5),\n                         'n_estimators': range(10, 85, 5),\n                         'objective': ['binary:logistic']},\n             scoring='roc_auc', verbose=10): (0.990955575496019, 0.6005108556832696), GridSearchCV(cv=10,\n             estimator=XGBClassifier(base_score=None, booster=None,
             callbacks=None, colsample_bylevel=None,
             colsample_bynode=None,
             colsample_bytree=None,
             early_stopping_rounds=10,
             enable_categorical=True, eval_metric=None,
             feature_types=None, gamma=None,
             gpu_id=None, grow_policy=None,
             importance_type=None,
             interaction_constraints=None,
             learning_rate=None, ma...
             max_leaves=None, min_child_weight=None,
             missing=nan, monotone_constraints=None,
             n_estimators=100, n_jobs=None, nthread=4,
             num_parallel_tree=None, predictor=None, ...),\n             n_jobs=10,\n             param_grid={'booster': ['gbtree'],\n                         'learning_rate': [0.1, 0.01, 0.05],\n                         'max_depth': range(2, 20, 5),\n                         'n_estimators': range(10, 85, 5),\n                         'objective': ['binary:logistic']},\n             scoring='roc_auc', verbose=10): (0.9991897208493371, 0.6385696040868454), GridSearchCV(cv=10,\n             estimator=XGBClassifier(base_score=None, booster=None,
             callbacks=None, colsample_bylevel=None,
             colsample_bynode=None,
             colsample_bytree=None,
             early_stopping_rounds=10,
             enable_categorical=True, eval_metric=None,
             feature_types=None, gamma=None,
             gpu_id=None, grow_policy=None,
             importance_type=None,
             interaction_constraints=None,
             learning_rate=None, ma...
             max_leaves=None, min_child_weight=None,
             missing=nan, monotone_constraints=None,
             n_estimators=100, n_jobs=None, nthread=4,
             num_parallel_tree=None, predictor=None, ...),\n             n_jobs=10,\n             param_grid={'booster': ['gbtree'],\n                         'learning_rate': [0.1, 0.01, 0.05],\n                         'max_depth': range(2, 20, 5),\n                         'n_estimators': range(10, 85, 5),\n                         'objective': ['binary:logistic']},\n             scoring='roc_auc', verbose=10): (0.9929990773579203, 0.6386973180076628), GridSearchCV(cv=10,\n             estimator=XGBClassifier(base_score=None, booster=None,
             callbacks=None, colsample_bylevel=None,
             colsample_bynode=None,
             colsample_bytree=None,
             early_stopping_rounds=10,
             enable_categorical=True, eval_metric=None,
             feature_types=None, gamma=None,
             gpu_id=None, grow_policy=None,
             importance_type=None,
             interaction_constraints=None,
             learning_rate=None, ma...
             max_leaves=None, min_child_weight=None,
             missing=nan, monotone_constraints=None,
             n_estimators=100, n_jobs=None, nthread=4,
             num_parallel_tree=None, predictor=None, ...),\n             n_jobs=10,\n             param_grid={'booster': ['gbtree'],\n                         'learning_rate': [0.1, 0.01, 0.05],\n                         'max_depth': range(2, 20, 5),\n                         'n_estimators': range(10, 85, 5),\n                         'objective': ['binary:logistic']},\n             scoring='roc_auc', verbose=10): (0.9201463968235903, 0.5257329200568255), GridSearchCV(cv=10,\n             estimator=XGBClassifier(base_score=None, booster=None,
             callbacks=None, colsample_bylevel=None,
             colsample_bynode=None,
             colsample_bytree=None,
             early_stopping_rounds=10,
             enable_categorical=True, eval_metric=None,
             feature_types=None, gamma=None,
             gpu_id=None, grow_policy=None,
             importance_type=None,
             interaction_constraints=None,
             learning_rate=None, ma...
             max_leaves=None, min_child_weight=None,
             missing=nan, monotone_constraints=None,
             n_estimators=100, n_jobs=None, nthread=4,
             num_parallel_tree=None, predictor=None, ...),\n             n_jobs=10,\n             param_grid={'booster': ['gbtree'],\n                         'learning_rate': [0.1, 0.01, 0.05],\n                         'max_depth': range(2, 20, 5),\n                         'n_estimators': range(10, 85, 5),\n                         'objective': ['binary:logistic']},\n             scoring='roc_auc', verbose=10): (0.9926422239925143, 0.5951181712514528), GridSearchCV(cv=10,\n             estimator=XGBClassifier(base_score=None, booster=None,
             callbacks=None, colsample_bylevel=None,
             colsample_bynode=None,
             colsample_bytree=None,
             early_stopping_rounds=10,
             enable_categorical=True, eval_metric=None,
             feature_types=None, gamma=None,
             gpu_id=None, grow_policy=None,
             importance_type=None,
             interaction_constraints=None,
             learning_rate=None, ma...
             max_leaves=None, min_child_weight=None,
             missing=nan, monotone_constraints=None,
             n_estimators=100, n_jobs=None, nthread=4,
             num_parallel_tree=None, predictor=None, ...),\n             n_jobs=10,\n             param_grid={'booster': ['gbtree'],\n                         'learning_rate': [0.1, 0.01, 0.05],\n                         'max_depth': range(2, 20, 5),\n                         'n_estimators': range(10, 85, 5),\n                         'objective': ['binary:logistic']},\n             scoring='roc_auc', verbose=10): (0.9717156342070989, 0.5632829652589435)}"